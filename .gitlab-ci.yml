###############################################################################
## Stages
################################################################################
stages:
  - pr_build
  - build_acc
  - deploy_acc
  - build_prod
  - deploy_prod

################################################################################
## Variables
################################################################################
variables:
  BUILD_CONTAINER: psybizz-registry.githost.io/containers/builder:stable

cache:
  paths:
    - node_modules/

################################################################################
## Templates
################################################################################
## test and build for merge requests
.test_and_build_acc:
  before_script: &test_and_build_acc
    - yarn install --ignore-platform --no-progress --non-interactive
    - yarn run build:acc

.test_and_build_prod:
  before_script: &test_and_build_prod
    - yarn install --ignore-platform --no-progress --non-interactive
    - yarn run build:prod

## PR build stage
.build_stage: &build_stage
  stage: pr_build
  image: ${BUILD_CONTAINER}
  services:
    - docker:dind
  before_script: *test_and_build_prod
  script:
    - echo "build stage"
  cache:
    paths:
      - node_modules/

### Build acceptance
.build_acc: &build_acc
  stage: build_acc
  image: ${BUILD_CONTAINER}
  services:
    - docker:dind
  before_script: *test_and_build_acc
  script:
    - echo "build acc stage"
  cache:
    paths:
      - node_modules/

### Build production
.build_prod: &build_prod
  stage: build_prod
  image: ${BUILD_CONTAINER}
  services:
    - docker:dind
  before_script: *test_and_build_prod
  script:
    - echo "build prod stage"
  cache:
    paths:
      - node_modules/

## Deploy project using Rancher
.deploy_stage_rancher: &deploy_stage_rancher
  image: cdrx/rancher-gitlab-deploy
  script:
    - upgrade --environment="${DEPLOY_ENVIRONMENT}" --stack="${DEPLOY_STACK}" --service="${DEPLOY_SERVICE}" --finish-upgrade

################################################################################
## Building & Testing
################################################################################

## Build & test PR/MR
pr_build:
  <<: *build_stage
  script:
    - echo "Running PR build"
  except:
    - acceptance
    - master

## Build & test acceptance
build_acceptance:
  <<: *build_acc
  script:
  # Image tested, pushing to registry to prepare for deploy
  - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
  - docker build -t ${CI_REGISTRY_IMAGE}:${CI_BUILD_REF} .
  - docker tag ${CI_REGISTRY_IMAGE}:${CI_BUILD_REF} ${CI_REGISTRY_IMAGE}:acceptance
  - docker push ${CI_REGISTRY_IMAGE}
  only:
  - dockerized-deployment # todo: switch this back to acceptance

### Build & test prod
build_production:
  <<: *build_prod
  script:
  # Image tested, pushing to registry to prepare for deploy
  - docker tag ${CI_REGISTRY_IMAGE}:${CI_BUILD_REF} ${CI_REGISTRY_IMAGE}:latest
  - docker push ${CI_REGISTRY_IMAGE}
  only:
  - dockerized-deployment # todo: switch this back to master

################################################################################
## Deploys stages
################################################################################

## Deploy to Acceptance
deploy_acc:
  <<: *deploy_stage_rancher
  stage: deploy_acc
  variables:
    DEPLOY_ENVIRONMENT: neon2-acceptance
  environment: neon2-acceptance
  only:
  - dockerized-deployment # todo: switch this back to acceptance

## Deploy to Production
deploy_prod:
  <<: *deploy_stage_rancher
  stage: deploy_prod
  variables:
    DEPLOY_ENVIRONMENT: neon2-production
  environment: neon2-production
  only:
  - dockerized-deployment # todo: switch this back to master
