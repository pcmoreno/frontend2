###############################################################################
## Stages
################################################################################
stages:
  - build
  #- build_acc
  #- deploy_acc
  #- build_prod
  #- deploy_prod

################################################################################
## Variables
################################################################################
variables:
  BUILD_CONTAINER: psybizz-registry.githost.io/containers/builder:stable

cache:
  paths:
    - node_modules/

################################################################################
## Templates
################################################################################
## Deploy and run tests
## Shared build job config
#.install_before_build:
#  before_script: &install_before_build
#    - yarn install --ignore-platform --no-progress --non-interactive
#
## test and build for merge requests
#.test_and_build: &test_and_build
#  image: ${BUILD_CONTAINER}
#  before_script: *install_before_build
#  script:
#    - yarn run build:prod
#  cache:
#    paths:
#      - node_modules/

## Shared build job config
.build_stage: &build_stage
  stage: build
  image: ${BUILD_CONTAINER}
  services:
    - docker:dind
  #before_script: *test_and_build
  script:
    - echo "build stage"
  cache:
    paths:
      - node_modules/

### Shared build job config
#.build_stage: &build_stage
#  stage: build
#  image: ${BUILD_CONTAINER}
#  services:
#    - docker:dind
#  before_script: *test_and_build
#  script:
#    - echo "build stage"
#  cache:
#    paths:
#      - node_modules/
#
### Shared build job config
#.build_stage: &build_stage
#  stage: build
#  image: ${BUILD_CONTAINER}
#  services:
#    - docker:dind
#  before_script: *test_and_build
#  script:
#    - echo "build stage"
#  cache:
#    paths:
#      - node_modules/

## Deploy project using Rancher
#.deploy_stage_rancher: &deploy_stage_rancher
#  image: cdrx/rancher-gitlab-deploy
#  script:
#    - upgrade --environment="${DEPLOY_ENVIRONMENT}" --stack="${DEPLOY_STACK}" --service="${DEPLOY_SERVICE}" --finish-upgrade

################################################################################
## Building & Testing
################################################################################

## Build & test PR/MR
pr_build:
  <<: *build_stage
  script:
    - echo "Running PR build"
  except:
    - acceptance
    - master

## Build & test acceptance
#build_acceptance:
#  <<: *build_stage
#  script:
#  # Image tested, pushing to registry to prepare for deploy
#  - docker tag ${CI_REGISTRY_IMAGE}:${CI_BUILD_REF} ${CI_REGISTRY_IMAGE}:acceptance
#  - docker push ${CI_REGISTRY_IMAGE}
#  only:
#  - acceptance
#
### Build & test master
#build_master:
#  <<: *build_stage
#  script:
#  # Image tested, pushing to registry to prepare for deploy
#  - docker tag ${CI_REGISTRY_IMAGE}:${CI_BUILD_REF} ${CI_REGISTRY_IMAGE}:latest
#  - docker push ${CI_REGISTRY_IMAGE}
#  only:
#  - master

################################################################################
## Deploys stages
################################################################################

## Deploy to Acceptance
#deploy_acc:
#  <<: *deploy_stage_rancher
#  stage: deploy_acc
#  variables:
#    DEPLOY_ENVIRONMENT: neon2-acceptance
#  environment: neon2-acceptance
#  only:
#    - acceptance
#
### Deploy to Production
#deploy_prod:
#  <<: *deploy_stage_rancher
#  stage: deploy_prod
#  variables:
#    DEPLOY_ENVIRONMENT: neon2-production
#  environment: neon2-production
#  only:
#    - master
